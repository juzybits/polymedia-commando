{
    "include": [
        "src"
    ],
    "exclude": [
        "dist",
        "node_modules"
    ],
    "compilerOptions": {
        /* Language and Environment */
        "target": "ESNext",                                   /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
        // "jsx": "react-jsx",                                   /* Specify what JSX code is generated. */

        /* Modules */
        // "module": "ESNext",                                   /* Specify what module code is generated. */
        "moduleResolution": "node",                           /* Specify how TypeScript looks up a file from a given module specifier. */
        "rootDir": "src",                                     /* Specify the root folder within your source files. */
        "resolveJsonModule": true,                            /* Enable importing .json files. */

        /* Emit */
        // "noEmit": true,                                       /* Disable emitting files from a compilation. */
        "declaration": true,                                  /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
        "sourceMap": true,                                    /* Create source map files for emitted JavaScript files. */
        // "outDir": "dist",                                     /* Specify an output folder for all emitted files. */

        /* Interop Constraints */
        "esModuleInterop": true,                              /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
        "forceConsistentCasingInFileNames": true,             /* Ensure that casing is correct in imports. */

        /* Type Checking */
        "strict": true,                                       /* Enable all strict type-checking options. */
        "noUnusedLocals": true,                               /* Enable error reporting when local variables aren't read. */
        "noUnusedParameters": true,                           /* Raise an error when a function parameter isn't read. */
        "noImplicitReturns": true,                            /* Enable error reporting for codepaths that do not explicitly return in a function. */
        "noFallthroughCasesInSwitch": true,                   /* Enable error reporting for fallthrough cases in switch statements. */

        /* Completeness */
        "skipLibCheck": true                                  /* Skip type checking all .d.ts files. */
    }
}
